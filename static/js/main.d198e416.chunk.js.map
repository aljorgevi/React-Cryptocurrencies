{"version":3,"sources":["assets/img/cryptomonedas.png","Hooks/useCurrencies.js","Hooks/useCryptocurrencies.js","Components/Error.js","Components/Form.js","Components/Price.js","Components/Spinner.js","App.js","index.js"],"names":["Label","styled","label","Select","select","ErrorText","p","Error","message","Form","setCryptocurrency","setCurrency","setLoading","useState","cryptocurrencyList","setCryptocurrencyList","error","setError","state","setState","data","code","name","onChange","e","target","value","map","item","useCurrencies","currency","SelectCurrency","CoinInfo","Name","FullName","Id","useCryptocurrencies","cryptocurrency","SelectCryptocurrency","useEffect","a","axios","get","result","Data","requestAPI","onSubmit","preventDefault","Button","type","input","Price","Object","keys","length","Div","Quote","PRICE","Info","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","div","Spinner","className","App","setResult","loading","url","response","setTimeout","DISPLAY","component","Container","Image","src","image","alt","Heading","h1","img","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d198e416.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, { Fragment, useState } from 'react';\nimport styled from '@emotion/styled';\n\nexport default function useCurrencies() {\n  const [state, setState] = useState('');\n\n  const data = [\n    { code: 'USD', name: 'USD' },\n    { code: 'CLP', name: 'CLP' },\n    { code: 'EUR', name: 'EUR' },\n    { code: 'GBP', name: 'GBP' },\n  ];\n\n  const SelectCurrency = () => (\n    <Fragment>\n      <Label>Choose you currency</Label>\n      <Select onChange={(e) => setState(e.target.value)} value={state}>\n        <option value=\"\">-- Choose --</option>\n        {data.map((item) => (\n          <option key={item.code} value={item.code}>\n            {item.name}\n          </option>\n        ))}\n      </Select>\n    </Fragment>\n  );\n\n  return [state, SelectCurrency];\n}\n\nconst Label = styled.label`\n  font-family: 'Bebas Neue', cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n","import React, { Fragment, useState } from 'react';\nimport styled from '@emotion/styled';\n\nexport default function useCryptocurrencies(data) {\n  const [state, setState] = useState('');\n\n  const SelectCryptocurrency = () => (\n    <Fragment>\n      <Label>Choose you cryptocurrency</Label>\n      <Select onChange={(e) => setState(e.target.value)} value={state}>\n        <option value=\"CLP\">-- Choose --</option>\n\n        {data.map((item) => (\n          <option key={item.CoinInfo.Id} value={item.CoinInfo.Name}>\n            {item.CoinInfo.FullName}\n          </option>\n        ))}\n      </Select>\n    </Fragment>\n  );\n\n  return [state, SelectCryptocurrency];\n}\n\nconst Label = styled.label`\n  font-family: 'Bebas Neue', cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst ErrorText = styled.p`\n  background-color: #b7322c;\n  padding: 1rem;\n  color: #fff;\n  font-size: 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  font-family: 'Bebas Neue', cursive;\n  border-radius: 5px;\n`;\n\nconst Error = ({ message }) => {\n  return <ErrorText>{message}</ErrorText>;\n};\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport useCurrencies from '../Hooks/useCurrencies';\nimport useCryptocurrencies from '../Hooks/useCryptocurrencies';\nimport Error from './Error';\nimport axios from 'axios';\n\nconst Form = ({ setCryptocurrency, setCurrency, setLoading }) => {\n  const [cryptocurrencyList, setCryptocurrencyList] = useState([]);\n  const [error, setError] = useState(false);\n\n  // Custom Hook useCurrencies\n  const [currency, SelectCurrency] = useCurrencies();\n\n  // Custon Hook useCryptocurrencies\n  const [cryptocurrency, SelectCryptocurrency] = useCryptocurrencies(\n    cryptocurrencyList\n  );\n\n  useEffect(() => {\n    const url =\n      'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n\n    const requestAPI = async () => {\n      const result = await axios.get(url);\n      setCryptocurrencyList(result.data.Data);\n    };\n    requestAPI();\n  }, []);\n\n  const handleonSubmit = (e) => {\n    e.preventDefault();\n\n    if (currency === '' || cryptocurrency === '') {\n      setError(true);\n      return;\n    }\n\n    setError(false);\n\n    setLoading(true);\n    setCurrency(currency);\n    setCryptocurrency(cryptocurrency);\n  };\n\n  return (\n    <form onSubmit={handleonSubmit}>\n      {error ? <Error message=\"You most fill in all of the fields\" /> : null}\n      <SelectCurrency />\n      <SelectCryptocurrency />\n      <Button type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n\nexport default Form;\n\nconst Button = styled.input`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: #326ac0;\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Price = ({ result }) => {\n  if (Object.keys(result).length === 0) return null;\n  return (\n    <Div>\n      <Quote>\n        Price: <span>{result.PRICE}</span>{' '}\n      </Quote>\n      <Info>\n        Highday Price: <span>{result.HIGHDAY}</span>\n      </Info>\n      <Info>\n        Lowday Price: <span>{result.LOWDAY}</span>{' '}\n      </Info>\n      <Info>\n        Price change last 24 hours: <span>{result.CHANGEPCT24HOUR}</span>{' '}\n      </Info>\n      <Info>\n        Last update: <span>{result.LASTUPDATE}</span>{' '}\n      </Info>\n    </Div>\n  );\n};\n\nexport default Price;\n\nconst Div = styled.div`\n  color: #fff;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst Info = styled.p`\n  font-size: 18px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst Quote = styled.p`\n  font-size: 30px;\n  span {\n    font-weight: bold;\n  }\n`;\n","import React from 'react';\nimport '../style/Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"sk-cube-grid\">\n      <div className=\"sk-cube sk-cube1\"></div>\n      <div className=\"sk-cube sk-cube2\"></div>\n      <div className=\"sk-cube sk-cube3\"></div>\n      <div className=\"sk-cube sk-cube4\"></div>\n      <div className=\"sk-cube sk-cube5\"></div>\n      <div className=\"sk-cube sk-cube6\"></div>\n      <div className=\"sk-cube sk-cube7\"></div>\n      <div className=\"sk-cube sk-cube8\"></div>\n      <div className=\"sk-cube sk-cube9\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport image from './assets/img/cryptomonedas.png';\nimport Form from './Components/Form';\nimport Price from './Components/Price';\nimport Spinner from './Components/Spinner';\nimport axios from 'axios';\n\nfunction App() {\n  const [currency, setCurrency] = useState('');\n  const [cryptocurrency, setCryptocurrency] = useState('');\n  const [result, setResult] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const requestAPI = async () => {\n      if (currency === '') return;\n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${cryptocurrency}&tsyms=${currency}`;\n\n      const response = await axios.get(url);\n\n      setLoading(true);\n\n      setTimeout(() => {\n        setLoading(false);\n\n        setResult(response.data.DISPLAY[cryptocurrency][currency]);\n      }, 2000);\n    };\n    requestAPI();\n  }, [currency, cryptocurrency]);\n\n  const component = loading ? <Spinner /> : <Price result={result} />;\n\n  return (\n    <Container>\n      <div>\n        <Image src={image} alt=\"image-cripto\" />\n      </div>\n      <div>\n        <Heading>Check Live Cryptocurrency prices</Heading>\n        <Form\n          setLoading={setLoading}\n          setCurrency={setCurrency}\n          setCryptocurrency={setCryptocurrency}\n        />\n        {component}\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 90px;\n  &::after {\n    content: '';\n    width: 200px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}